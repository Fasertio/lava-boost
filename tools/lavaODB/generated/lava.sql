/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

DROP TABLE IF EXISTS "call" CASCADE;

DROP TABLE IF EXISTS "sourcefunction" CASCADE;

DROP TABLE IF EXISTS "run" CASCADE;

DROP TABLE IF EXISTS "build_bugs" CASCADE;

DROP TABLE IF EXISTS "build" CASCADE;

DROP TABLE IF EXISTS "bug" CASCADE;

DROP TABLE IF EXISTS "attackpoint" CASCADE;

DROP TABLE IF EXISTS "duabytes" CASCADE;

DROP TABLE IF EXISTS "dua_viable_bytes" CASCADE;

DROP TABLE IF EXISTS "dua" CASCADE;

DROP TABLE IF EXISTS "labelset" CASCADE;

DROP TABLE IF EXISTS "sourcelval" CASCADE;

CREATE TABLE "sourcelval" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "loc_filename" TEXT NOT NULL,
  "loc_begin_line" INTEGER NOT NULL,
  "loc_begin_column" INTEGER NOT NULL,
  "loc_end_line" INTEGER NOT NULL,
  "loc_end_column" INTEGER NOT NULL,
  "ast_name" TEXT NOT NULL,
  "len_bytes" INTEGER NOT NULL);

CREATE UNIQUE INDEX "SourceLvalUniq"
  ON "sourcelval" (
    "loc_filename",
    "loc_begin_line",
    "loc_begin_column",
    "loc_end_line",
    "loc_end_column",
    "ast_name");

CREATE TABLE "labelset" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "ptr" BIGINT NOT NULL,
  "inputfile" TEXT NOT NULL,
  "labels" INTEGER[] NOT NULL);

CREATE UNIQUE INDEX "LabelSetUniq"
  ON "labelset" (
    "ptr",
    "inputfile");

CREATE TABLE "dua" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "lval" BIGINT NOT NULL,
  "byte_tcn" INTEGER[] NOT NULL,
  "all_labels" INTEGER[] NOT NULL,
  "inputfile" TEXT NOT NULL,
  "max_tcn" INTEGER NOT NULL,
  "max_cardinality" INTEGER NOT NULL,
  "instr" BIGINT NOT NULL,
  "fake_dua" BOOLEAN NOT NULL,
  CONSTRAINT "lval_fk"
    FOREIGN KEY ("lval")
    REFERENCES "sourcelval" ("id")
    INITIALLY DEFERRED);

CREATE UNIQUE INDEX "DuaUniq"
  ON "dua" (
    "lval",
    "inputfile",
    "instr",
    "fake_dua");

CREATE TABLE "dua_viable_bytes" (
  "object_id" BIGINT NOT NULL,
  "index" BIGINT NOT NULL,
  "value" BIGINT NULL,
  CONSTRAINT "object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "dua" ("id")
    ON DELETE CASCADE,
  CONSTRAINT "value_fk"
    FOREIGN KEY ("value")
    REFERENCES "labelset" ("id")
    INITIALLY DEFERRED);

CREATE INDEX "dua_viable_bytes_object_id_i"
  ON "dua_viable_bytes" ("object_id");

CREATE INDEX "dua_viable_bytes_index_i"
  ON "dua_viable_bytes" ("index");

CREATE TABLE "duabytes" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "dua" BIGINT NOT NULL,
  "selected_low" INTEGER NOT NULL,
  "selected_high" INTEGER NOT NULL,
  "all_labels" INTEGER[] NOT NULL,
  CONSTRAINT "dua_fk"
    FOREIGN KEY ("dua")
    REFERENCES "dua" ("id")
    INITIALLY DEFERRED);

CREATE UNIQUE INDEX "DuaBytesUniq"
  ON "duabytes" (
    "dua",
    "selected_low",
    "selected_high");

CREATE TABLE "attackpoint" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "loc_filename" TEXT NOT NULL,
  "loc_begin_line" INTEGER NOT NULL,
  "loc_begin_column" INTEGER NOT NULL,
  "loc_end_line" INTEGER NOT NULL,
  "loc_end_column" INTEGER NOT NULL,
  "type" INTEGER NOT NULL);

CREATE UNIQUE INDEX "AttackPointUniq"
  ON "attackpoint" (
    "loc_filename",
    "loc_begin_line",
    "loc_begin_column",
    "loc_end_line",
    "loc_end_column",
    "type");

CREATE TABLE "bug" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "type" INTEGER NOT NULL,
  "trigger" BIGINT NOT NULL,
  "trigger_lval" BIGINT NOT NULL,
  "atp" BIGINT NOT NULL,
  "max_liveness" BIGINT NOT NULL,
  "extra_duas" BIGINT[] NOT NULL,
  "magic" INTEGER NOT NULL,
  CONSTRAINT "trigger_fk"
    FOREIGN KEY ("trigger")
    REFERENCES "duabytes" ("id")
    INITIALLY DEFERRED,
  CONSTRAINT "trigger_lval_fk"
    FOREIGN KEY ("trigger_lval")
    REFERENCES "sourcelval" ("id")
    INITIALLY DEFERRED,
  CONSTRAINT "atp_fk"
    FOREIGN KEY ("atp")
    REFERENCES "attackpoint" ("id")
    INITIALLY DEFERRED);

CREATE UNIQUE INDEX "BugUniq"
  ON "bug" (
    "type",
    "atp",
    "trigger_lval");

CREATE INDEX "BugLvalsQuery"
  ON "bug" (
    "atp",
    "type");

CREATE TABLE "build" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "output" TEXT NOT NULL,
  "compile" BOOLEAN NOT NULL);

CREATE TABLE "build_bugs" (
  "object_id" BIGINT NOT NULL,
  "index" BIGINT NOT NULL,
  "value" BIGINT NOT NULL,
  CONSTRAINT "object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "build" ("id")
    ON DELETE CASCADE,
  CONSTRAINT "value_fk"
    FOREIGN KEY ("value")
    REFERENCES "bug" ("id")
    INITIALLY DEFERRED);

CREATE INDEX "build_bugs_object_id_i"
  ON "build_bugs" ("object_id");

CREATE INDEX "build_bugs_index_i"
  ON "build_bugs" ("index");

CREATE TABLE "run" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "build" BIGINT NOT NULL,
  "fuzzed" BIGINT NULL,
  "exitcode" INTEGER NOT NULL,
  "output" TEXT NOT NULL,
  "success" BOOLEAN NOT NULL,
  "validated" BOOLEAN NOT NULL,
  CONSTRAINT "build_fk"
    FOREIGN KEY ("build")
    REFERENCES "build" ("id")
    INITIALLY DEFERRED,
  CONSTRAINT "fuzzed_fk"
    FOREIGN KEY ("fuzzed")
    REFERENCES "bug" ("id")
    INITIALLY DEFERRED);

CREATE TABLE "sourcefunction" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "loc_filename" TEXT NOT NULL,
  "loc_begin_line" INTEGER NOT NULL,
  "loc_begin_column" INTEGER NOT NULL,
  "loc_end_line" INTEGER NOT NULL,
  "loc_end_column" INTEGER NOT NULL,
  "name" TEXT NOT NULL);

CREATE UNIQUE INDEX "SourceFunctionUniq"
  ON "sourcefunction" (
    "loc_filename",
    "loc_begin_line",
    "loc_begin_column",
    "loc_end_line",
    "loc_end_column",
    "name");

CREATE TABLE "call" (
  "id" BIGSERIAL NOT NULL PRIMARY KEY,
  "call_instr" BIGINT NOT NULL,
  "ret_instr" BIGINT NOT NULL,
  "called_function" BIGINT NOT NULL,
  "callsite_file" TEXT NOT NULL,
  "callsite_line" INTEGER NOT NULL,
  CONSTRAINT "called_function_fk"
    FOREIGN KEY ("called_function")
    REFERENCES "sourcefunction" ("id")
    INITIALLY DEFERRED);

CREATE UNIQUE INDEX "CallUniq"
  ON "call" (
    "call_instr",
    "ret_instr",
    "called_function",
    "callsite_file",
    "callsite_line");

